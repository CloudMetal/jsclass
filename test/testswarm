#!/usr/bin/env ruby

require "rubygems"
require "bundler/setup"
require "testswarm/client"

server  = ENV["TESTSWARM_SERVER"]
key     = ENV["TESTSWARM_KEY"]
root    = ENV["TESTSWARM_ROOT"]
bundle  = ENV["BUNDLE_DIRECTORY"]

client  = TestSwarm::Client.new(server)
project = client.project("jsclass", :auth => key)

job = TestSwarm::Job.create(
  :rcs        => {
    :type     => "git",
    :url      => "git://github.com/jcoglan/js.class.git",
    :branch   => "master"
  },
  :directory  => File.join(root, "changeset", project.name),
  :diff       => ["source", "test"],
  :build      => [
                   "ln -s #{bundle} vendor/bundle",
                   "bundle install --path vendor/bundle",
                   "rm -rf build",
                   "bundle exec jake"
                 ],
  :inject     => "test/browser.html"
)

exit unless job.new?

runner = File.read(File.expand_path("../runner.js", __FILE__))
path   = "#{client.url}/changeset/#{project.name}/#{job.revision}"

runner.scan(/\b[A-Za-z.]+Spec\b/).uniq.sort.each do |spec|
  name = spec.gsub(/Spec$/, "")
  job.add_suite name, "#{path}/test/browser.html?test=#{name}"
end

project.submit_job "JS.Class Commit #{job.revision}", job,
                   :browsers => "all",
                   :max      => 5

